# state

state, data that changes through out the life cycle of the app, we use props to share data between components but how we actually modify the data while props are immutble which means  we can just change the value any where and expect react to update UI for data that changes react provides a hook called UseState a hook is function that can be called in the top level of the component to use the different features of the freamwork in the case of UseState it create a statfull value and when ever it changes automatically rerender any components that depend on it takes a default value as an orgument and returns two values in an arry its command to destructure this value with first elememt being the actual value you want use in the UI then the second value beeing a function you can uses to render a different value for example we might build a counter that starts with zero(0) the count is the current value which we can show the UI to change the count we might have a button that when clicked call the setCount function and add one(1) to the current value you will notice that when you run this code every time you click the button the UI will rerender that would not be the case if you use the regular variable on the component, one thing keep in mind when you working with an array or object with UseState is that when you set new value it compleatly over write the oldone if you want to merge a new value into an array or object it comman to use spread syntax to merge the old value into new object now if you state management becomes very complex you me prefer the use Reducer hook over UseState its a bit more advaneced but uses  a parattan popularize by Redux where you extract your logic into a function and dispatch action to update the state in addtion their are many third party librarius that deal with state management like redux,recoil
